name: ci

on:
  push:
    branches:
      - main
  release:
    types: [published]
  pull_request:

env:
  POETRY_HOME: /opt/poetry

jobs:

  lint_and_test:
    strategy:
      matrix:
        python-version: ['3.7', '3.8', '3.9', '3.10', '3.11', '3.12']
    runs-on: ubuntu-22.04
    services:
      redis:
        image: redis:7.2
        ports:
          - 6379:6379
    steps:
      - name: Check out repository code
        uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install poetry (Python 3.7 or 3.8)
        if: matrix.python-version == '3.7' || matrix.python-version == '3.8'
        run: |
          python3 -m venv $POETRY_HOME
          $POETRY_HOME/bin/pip install "poetry>=1.5.1,<1.6"
      - name: Install poetry (Python >=3.9)
        if: matrix.python-version != '3.7' && matrix.python-version != '3.8'
        run: |
          python3 -m venv $POETRY_HOME
          $POETRY_HOME/bin/pip install "poetry>=1.8.4,<1.9"
      - name: Fix github path
        run: |
          echo "$POETRY_HOME/bin" >> "$GITHUB_PATH"
      - name: Install requirements
        run: |
          poetry install
      - name: Run lint
        if: matrix.python-version != '3.7' && matrix.python-version != '3.8'
        run: |
          make FIX=0 lint
      - name: run unit tests
        run: |
          make test
      - name: run integration tests
        env:
          REDIS_HOST: localhost
          REDIS_PORT: 6379
        run: |
          make test
      - name: Checking for dirty files
        run: |
          make no-dirty
      - name: Cleaning
        run: |
          make clean
      - name: Checking for dirty files (again)
        run: |
          make no-dirty

  publish_pypi:
    runs-on: ubuntu-22.04
    needs: lint_and_test
    if: github.event_name == 'release'
    steps:
      - name: Check out repository code
        uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.9"
      - name: Install poetry
        run: |
          python3 -m venv $POETRY_HOME
          $POETRY_HOME/bin/pip install "poetry>=1.8.4,<1.9"
      - name: Fix github path
        run: |
          echo "$POETRY_HOME/bin" >> "$GITHUB_PATH"
      - name: Install requirements
        run: |
          poetry install
      - name: Publish on Pypi
        run: |
          VERSION=`echo "${{ github.event.release.tag_name }}" |sed 's/^v//g'`
          cat pyproject.toml |sed 's/^version = ".*"$/version = "'${VERSION}'"/g' > pyproject.toml.new
          mv -f pyproject.toml.new pyproject.toml
          cat pyproject.toml |grep ^version
          poetry config pypi-token.pypi "${{ secrets.PYPI_TOKEN }}"
          poetry build
          poetry publish
