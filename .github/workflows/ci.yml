name: ci

on:
  push:
    branches:
      - main
    paths-ignore:
      - 'CHANGELOG.md'
  release:
    types: [published]
  pull_request:
    paths-ignore:
      - 'CHANGELOG.md'

env:
  POETRY_HOME: /opt/poetry

jobs:

  main_ci:
    strategy:
      matrix:
        python-version: ['3.7', '3.8', '3.9', '3.10', '3.11', '3.12']
    runs-on: ubuntu-22.04
    services:
      redis:
        image: redis:7.2
        ports:
          - 6379:6379
    steps:
      - name: Check out repository code
        uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install poetry (Python 3.7 or 3.8)
        if: matrix.python-version == '3.7' || matrix.python-version == '3.8'
        run: |
          python3 -m venv $POETRY_HOME
          $POETRY_HOME/bin/pip install "poetry>=1.5.1,<1.6"
      - name: Install poetry (Python >=3.9)
        if: matrix.python-version != '3.7' && matrix.python-version != '3.8'
        run: |
          python3 -m venv $POETRY_HOME
          $POETRY_HOME/bin/pip install "poetry>=1.8.4,<1.9"
      - name: Fix github path
        run: |
          echo "$POETRY_HOME/bin" >> "$GITHUB_PATH"
      - name: Install requirements (Python 3.7 or 3.8)
        if: matrix.python-version == '3.7' || matrix.python-version == '3.8'
        run: |
          poetry install --without lint --without doc
      - name: Install requirements (Python >=3.9)
        if: matrix.python-version != '3.7' && matrix.python-version != '3.8'
        run: |
          poetry install
      - name: Run lint
        if: matrix.python-version != '3.7' && matrix.python-version != '3.8'
        run: |
          make FIX=0 lint
      - name: Run doc
        if: matrix.python-version == '3.9'
        run: |
          make doc
      - name: Upload site as an artifact
        if: matrix.python-version == '3.9'
        uses: actions/upload-artifact@v4
        with:
          name: site
          path: site/
      - name: run unit tests
        run: |
          make test
      - name: run integration tests
        env:
          REDIS_HOST: localhost
          REDIS_PORT: 6379
        run: |
          make test
      - name: Checking for dirty files
        run: |
          make no-dirty
      - name: Cleaning
        run: |
          make clean
      - name: Checking for dirty files (again)
        run: |
          make no-dirty

  githubpages:
    runs-on: ubuntu-22.04
    needs: main_ci
    permissions:
      contents: read
      pages: write
      id-token: write
    concurrency:
      group: "pages"
      cancel-in-progress: true
    environment:
      name: github-pages
    if: github.ref == 'refs/heads/main' && github.event_name == 'push' 
    steps: 
      - name: Download site artifact
        uses: actions/download-artifact@v4
        with:
          name: site
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          # Upload entire repository
          path: '.'
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

  status: # this is a special job for mergify
    runs-on: ubuntu-22.04
    needs: main_ci
    steps:
      - name: Status
        run: |
          echo "OK"

